---
Checks:          'clang-diagnostic-*,clang-analyzer-*,-clang-analyzer-alpha*,
cppcoreguidelines-*,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-pointer-arithmetic,
google-default-arguments,google-global-names-in-headers,google-runtime-member-string-references,
llvm-namespace-comment,
misc-*,-misc-macro-parentheses,-misc-noexcept-move-constructor,-misc-unused-parameters,-misc-throw-by-value-catch-by-reference,
modernize-*,-modernize-make-unique,-modernize-use-using,
performance-*,
readability-*,-readability-else-after-return,-readability-function-size,
'
# It would be nice to adhere to
#   - cppcoreguidelines-pro-bounds-array-to-pointer-decay
#   - cppcoreguidelines-pro-bounds-pointer-arithmetic
#   - modernize-make-unique    (Need C++11 compatibility)
#   - modernize-use-using      (Need C++11 compatibility)
#   - misc-noexcept-move-constructor            (A lot of work)
#   - misc-throw-by-value-catch-by-reference    (Problem with the tests)
#   - readability-function-size    (Problem is that catch macros produce a lot of code)
#
# Discuss:
#   - readability-else-after-return
WarningsAsErrors: ''
AnalyzeTemporaryDtors: false
User:            michaelfherbst
CheckOptions:    
  - key:             cppcoreguidelines-pro-bounds-constant-array-index.GslHeader
    value:           ''
  - key:             cppcoreguidelines-pro-bounds-constant-array-index.IncludeStyle
    value:           '0'
  - key:             cppcoreguidelines-pro-type-member-init.IgnoreArrays
    value:           '0'
  - key:             llvm-namespace-comment.ShortNamespaceLines
    value:           '1'
  - key:             llvm-namespace-comment.SpacesBeforeComments
    value:           '2'
  - key:             misc-assert-side-effect.AssertMacros
    value:           "assert,assert_dbg"
  - key:             misc-assert-side-effect.CheckFunctionCalls
    value:           '0'
  - key:             misc-suspicious-string-compare.WarnOnImplicitComparison
    value:           '1'
  - key:             misc-suspicious-string-compare.WarnOnLogicalNotComparison
    value:           '1'
  - key:             modernize-loop-convert.MaxCopySize
    value:           '16'
  - key:             modernize-loop-convert.MinConfidence
    value:           reasonable
  - key:             modernize-use-auto.RemoveStars
    value:           '0'
  - key:             readability-braces-around-statements.ShortStatementLines
    value:           '1'
  - key:             readability-function-size.BranchThreshold
    value:           '4294967295'
  - key:             readability-function-size.LineThreshold
    value:           '4294967295'
  - key:             readability-function-size.StatementThreshold
    value:           '800'
#
# Naming convention
#
  - key:             readability-identifier-naming.AbstractClassSuffix
    value:           '_i'
  - key:             readability-identifier-naming.ClassCase
    value:           CamelCase
  - key:             readability-identifier-naming.ClassMemberCase
    value:           lower_case
  - key:             readability-identifier-naming.ClassMethodCase
    value:           lower_case
  - key:             readability-identifier-naming.MemberCase
    value:           lower_case
  - key:             readability-identifier-naming.MethodCase
    value:           lower_case
  - key:             readability-identifier-naming.EnumCase
    value:           CamelCase
  - key:             readability-identifier-naming.EnumConstantCase
    value:           UPPER_CASE
  - key:             readability-identifier-naming.FunctionCase
    value:           lower_case
  - key:             readability-identifier-naming.MacroDefinitionCase
    value:           aNy_CasE
  - key:             readability-identifier-naming.NamespaceCase
    value:           lower_case
  - key:             readability-identifier-naming.ParameterCase
    value:           lower_case
  - key:             readability-identifier-naming.ParameterPackCase
    value:           CamelCase
  - key:             readability-identifier-naming.PrivateMemberPrefix
    value:           'm_'
  - key:             readability-identifier-naming.StaticConstantCase
    value:           lower_case
  - key:             readability-identifier-naming.StructCase
    value:           CamelCase
  - key:             readability-identifier-naming.TemplateParameterCase
    value:           CamelCase
  - key:             readability-identifier-naming.UnionCase
    value:           CamelCase
  - key:             readability-identifier-naming.VariableCase
    value:           lower_case
...

